import React from 'react';
import { motion } from 'framer-motion';
import { useInViewAnimation } from './hooks';
import { fadeInUpVariants, staggerContainer } from './animations';

interface ContentBlockProps {
  title: string;
  content: string;
  layout?: 'left' | 'right';
  decorativeLine?: boolean;
  className?: string;
}

const ContentBlock: React.FC<ContentBlockProps> = ({
  title,
  content,
  layout = 'left',
  decorativeLine = true,
  className = ''
}) => {
  const [ref, inView] = useInViewAnimation();

  return (
    <motion.div
      ref={ref}
      className={`relative grid grid-cols-1 lg:grid-cols-12 gap-10 items-start ${className}`}      initial="initial"
      animate={inView ? "animate" : "initial"}
      variants={staggerContainer}
    >
      {/* Decorative line */}
      {decorativeLine && layout === 'left' && (        <motion.div 
          className="absolute top-0 left-0 w-1 h-24 bg-gradient-to-b from-blue-500 to-transparent hidden lg:block"
          initial={{ scaleY: 0 }}
          animate={{ scaleY: inView ? 1 : 0 }}
          transition={{ duration: 0.8 }}
        />
      )}
      
      {/* Title column */}
      <motion.div 
        className={`lg:col-span-5 ${layout === 'right' ? 'lg:col-start-8' : ''}`}
        variants={fadeInUpVariants}
      >        <motion.h2 
          className={`text-4xl font-normal leading-snug text-[#2D2D2D] mb-8 ${
            layout === 'right' ? 'text-left lg:text-right' : 'text-left'
          }`}
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: inView ? 1 : 0, y: inView ? 0 : 30 }}
          transition={{ duration: 0.6 }}
        >
          <span className="relative inline-block">
            {title}            <motion.span
              className="absolute -bottom-2 left-0 right-0 h-[3px] bg-gradient-to-r from-blue-500 to-indigo-500"
              initial={{ width: 0 }}
              animate={{ width: inView ? '100%' : 0 }}
              transition={{ delay: 0.3, duration: 0.8 }}
            />
          </span>
        </motion.h2>
            />
          </span>
        </motion.h2>
      </motion.div>
      
      {/* Content column */}
      <motion.div 
        className={`lg:col-span-7 ${layout === 'right' ? 'lg:col-start-1 lg:row-start-1' : ''}`}
        variants={fadeInUpVariants}
      >        <motion.div
          className="pl-2 sm:pl-4 lg:pl-0 relative"
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: inView ? 1 : 0, y: inView ? 0 : 30 }}
          transition={{ duration: 0.6, delay: 0.2 }}
        >
          {layout === 'left' && (
            <div className="absolute -left-4 top-0 bottom-0 w-[3px] bg-gradient-to-b from-transparent via-gray-300 to-transparent opacity-50 hidden sm:block lg:hidden" />
          )}
          
          <div className="bg-white/90 backdrop-blur-sm rounded-lg p-6 shadow-sm border border-gray-100">
            <p className="text-[17px] text-[#3E3E3E] leading-relaxed">
              {content}
            </p>
          </div>
        </motion.div>
      </motion.div>
    </motion.div>
  );
};

export default ContentBlock;
